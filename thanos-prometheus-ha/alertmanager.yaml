apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: monitor
data:
  alertmanager.yml: |
    global:
      # The smarthost and SMTP sender used for mail notifications.
      smtp_smarthost: 'smtphz.qiye.163.com:587'
      smtp_from: 'monitor@znwltech.com'
      smtp_auth_username: 'monitor@znwltech.com'
      smtp_auth_password: 'jEuA3gXs8h87sjeq'
    #  smtp_require_tls: false
    
    templates:
      - '*.tmpl'
    
    inhibit_rules:
    - source_match:
        #datacenter: 'thanos-prometheus'
        alertname: 'high_load'
        severity: 'critical'
      target_match:
        #datacenter: 'thanos-prometheus'
        severity: 'warning'
      # Apply inhibition if the alertname is the same.
      equal: 
        - 'instance'
    
    # The root route on which each incoming alert enters.
    route:
      # The labels by which incoming alerts are grouped together. For example,
      # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
      # be batched into a single group.
      group_by: ['alertname', 'cluster', 'service']
    
      # When a new group of alerts is created by an incoming alert, wait at
      # least 'group_wait' to send the initial notification.
      # This way ensures that you get multiple alerts for the same group that start
      # firing shortly after another are batched together on the first 
      # notification.
      group_wait: 30s
    
      # When the first notification was sent, wait 'group_interval' to send a batch
      # of new alerts that started firing for that group.
      group_interval: 5m
    
      # If an alert has successfully been sent, wait 'repeat_interval' to
      # resend them.
      repeat_interval: 4h 
    
      # A default receiver
      receiver: 'monitor_prometheus'
      routes:
      - receiver: 'monitor_prometheus'
        match:
          severity: critical
      - receiver: 'monitor_prometheus'
        match:
          severity: warning
    
    receivers:
    - name: 'monitor_prometheus'
      email_configs:
      #- to: 'sre@znwltech.com'
      - to: 'yang.tianfu@znwltech.com'
    #  wechat_configs:
    #  - send_resolved: false
    #    to_user: '@all'
    #    agent_id: '1000002'
    #    api_url: 'https://qyapi.weixin.qq.com/cgi-bin/'
    #    corp_id: 'ww85a087a8e6d3f72b'
    #    api_secret: 'zgTmTpG7d2garAze1nQPQ2xegifCwJHWzAN0MOWyxcc'
---
apiVersion: v1
kind: Service
metadata:
  name: alertmanager-headless
  labels:
    app: alertmanager
  namespace: monitor
spec:
  ports:
  - port: 9093
    name: database
  clusterIP: None
  selector:
    app: alertmanager
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: alertmanager
  namespace: monitor
spec:
  selector:
    matchLabels:
      app: alertmanager
  serviceName: "alertmanager"
  replicas: 3
  template:
    metadata:
      labels:
        app: alertmanager
    spec:
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - alertmanager
            topologyKey: kubernetes.io/hostname
      containers:
      - name: alertmanager
        image: reg.chebai.org/paas/alertmanager:v0.18.0
        command: ["/bin/alertmanager"]
        args: ["--web.listen-address=0.0.0.0:9093", "--cluster.listen-address=0.0.0.0:9094", "--config.file=/etc/alertmanager/alertmanager.yml", "--storage.path=/alertmanager","--cluster.peer=alertmanager-0.alertmanager:9094","--cluster.peer=alertmanager-1.alertmanager:9094","--cluster.peer=alertmanager-2.alertmanager:9094"] 
        ports:
        - containerPort: 9093
          name: alertmanager
        - containerPort: 9094
          name: alert-cluster
        resources:
          requests:
            cpu: 0.5
            memory: 2Gi
          limits:
            cpu: 1
            memory: 2Gi
        volumeMounts:
        - name: alertmanager-data
          mountPath: /alertmanager
        - mountPath: /etc/alertmanager/alertmanager.yml
          name: config
          subPath: alertmanager.yml
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: alertmanager.yml
            mode: 420
            path: alertmanager.yml
          name: alertmanager-config
        name: config
  volumeClaimTemplates:
  - metadata:
      name: alertmanager-data
      #annotations:
      #  everest.io/disk-volume-type: SAS
      #labels:
      #  failure-domain.beta.kubernetes.io/region: cn-north-4
      #  failure-domain.beta.kubernetes.io/zone: cn-north-4b
    spec:
      accessModes: [ "ReadWriteOnce" ]
      #storageClassName: csi-disk
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: alertmanager
    release: alertmanager
  name: alertmanager
spec:
  ports:
  - name: alertmanager
    port: 9093
    protocol: TCP
    targetPort: 9093
    nodePort: 31004
  selector:
    app: alertmanager
  type: NodePort
status:
  loadBalancer: {}
  #---
  #apiVersion: v1
  #kind: Service
  #metadata:
  #  labels:
  #    app: alertmanager
  #  name: alertmanager-0
  #spec:
  #  ports:
  #    - port: 8086
  #      protocol: TCP
  #      targetPort: 8086
  #      name: alertmanager
  #  selector:
  #    statefulset.kubernetes.io/pod-name: alertmanager-0
  #---
  #apiVersion: v1
  #kind: Service
  #metadata:
  #  labels:
  #    app: alertmanager
  #  name: alertmanager-1
  #spec:
  #  ports:
  #    - port: 8086
  #      protocol: TCP
  #      targetPort: 8086
  #      name: alertmanager
  #  selector:
  #    statefulset.kubernetes.io/pod-name: alertmanager-1
