apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: thanos-store
  name: thanos-store
  namespace: monitor
spec:
  podManagementPolicy: Parallel
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: thanos-store
  serviceName: thanos-store
  template:
    metadata:
      labels:
        app.kubernetes.io/name: thanos-store
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - thanos-store
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - store
        - --data-dir=/var/thanos/store
        - --grpc-address=0.0.0.0:10901
        - --http-address=0.0.0.0:10902
        #- --objstore.config=$(OBJSTORE_CONFIG)
        - --objstore.config-file=/etc/bucket/config.yaml
        #- --web.external-prefix=/store
        #env:
        #- name: OBJSTORE_CONFIG
        #  valueFrom:
        #    secretKeyRef:
        #      key: thanos.yaml
        #      name: thanos-objectstorage
        image: reg.chebai.org/paas/thanos:v0.15.0 
        name: thanos-store
        ports:
        - containerPort: 10901
          name: grpc
        - containerPort: 10902
          name: http
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 10902
            scheme: HTTP
        resources:
          limits:
            cpu: "2"
            memory: 4Gi
          requests:
            cpu: 500m
            memory: 1Gi
        volumeMounts:
          - mountPath: /var/thanos/store
            name: thanos-store-data
            readOnly: false
          - name: bucketconfig
            mountPath: /etc/bucket
      volumes:
        - name: bucketconfig
          configMap:
            name: bucketconfig
  volumeClaimTemplates:
  - metadata:
      name: thanos-store-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      #storageClassName: csi-disk
      resources:
        requests:
          storage: 50Gi
      #storageClassName: standard
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: thanos-store
  name: thanos-store
  namespace: monitor
spec:
  clusterIP: None
  ports:
  - name: grpc
    port: 10901
    targetPort: 10901
  - name: http
    port: 10902
    targetPort: 10902
  selector:
    app.kubernetes.io/name: thanos-store
---
apiVersion: v1
kind: Service
metadata:
  name: thanos-store-gateway
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: grpc
      port: 10901
      targetPort: grpc
  selector:
    thanos-store-api: "true"
---
# apiVersion: networking.k8s.io/v1beta1
# kind: Ingress
# metadata:
#   name: store
#   namespace: monitor
# spec:
#   rules:
#   - host: store.example.org
#     http:
#       paths:
#       - path: 
#         backend:
#           serviceName: thanos-store
#           servicePort: 10902    
