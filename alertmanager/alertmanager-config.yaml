apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: monitor
data:
  alertmanager.yml: |
    # global:
    #   resolve_timeout: 5m
    #   smtp_smarthost: 'smtp.qq.com:25'
    #   smtp_from: 'xxx@qq.com'
    #   smtp_auth_username: 'xxx@qq.com'
    #   smtp_auth_password: '邮箱授权码'
    
    # route:
    #   group_by: ['alertname']
    #   group_wait: 10s
    #   group_interval: 1m
    #   repeat_interval: 1m
    #   receiver: 'mail-receiver'
    # receivers:
    # - name: 'mail-receiver'
    #   email_configs:
    #   - to: 'xxx@qq.com'

    # #global:
    # #  resolve_timeout: 5m
    # #
    # #route:
    # #  group_by: ['alertname']
    # #  group_wait: 10s
    # #  group_interval: 10s
    # #  repeat_interval: 1h
    # #  receiver: 'web.hook'
    # #receivers:
    # #- name: 'web.hook'
    # #  webhook_configs:
    # #  - url: 'http://127.0.0.1:5001/'
    # #inhibit_rules:
    # #  - source_match:
    # #      severity: 'critical'
    # #    target_match:
    # #      severity: 'warning'
    # #    equal: ['alertname', 'dev', 'instance']
    global:
      # The smarthost and SMTP sender used for mail notifications.
      smtp_smarthost: 'smtphz.qiye.163.com:587'
      smtp_from: 'monitor@test.com'
      smtp_auth_username: 'monitor@test.com'
      smtp_auth_password: '12321'
    #  smtp_require_tls: false
    
    templates:
      - '*.tmpl'
    
    inhibit_rules:
    - source_match:
        severity: 'critical'
      target_match:
        severity: 'warning'
      # Apply inhibition if the alertname is the same.
      equal: ['alertname', 'cluster', 'service']
    
    # The root route on which each incoming alert enters.
    route:
      # The labels by which incoming alerts are grouped together. For example,
      # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
      # be batched into a single group.
      group_by: ['alertname', 'cluster', 'service']
    
      # When a new group of alerts is created by an incoming alert, wait at
      # least 'group_wait' to send the initial notification.
      # This way ensures that you get multiple alerts for the same group that start
      # firing shortly after another are batched together on the first 
      # notification.
      group_wait: 10s
    
      # When the first notification was sent, wait 'group_interval' to send a batch
      # of new alerts that started firing for that group.
      group_interval: 5m
    
      # If an alert has successfully been sent, wait 'repeat_interval' to
      # resend them.
      repeat_interval: 4h 
    
      # A default receiver
      receiver: 'webhook'
      routes:
      - receiver: 'webhook'
        match:
          severity: critical
      - receiver: 'webhook'
        match:
          severity: warning
    
    receivers:
    - name: 'monitor_prometheus'
      email_configs:
      - to: 'yang.tf@test.com'
        # 邮件主题
        headers: { Subject: " {{ .CommonLabels.instance }} {{ .CommonAnnotations.summary }}   Alarm email " }

    # dingtalk-hook
    - name: 'webhook'
      webhook_configs:
      - url: 'http://dingtalk-hook:5000'
        send_resolved: false

    #  wechat_configs:
    #  - send_resolved: false
    #    to_user: '@all'
    #    agent_id: '32'
    #    api_url: 'https://qyapi.weixin.qq.com/cgi-bin/'
    #    corp_id: '4234234234'
    #    api_secret: '423432423423432'